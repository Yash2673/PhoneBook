{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/contactActions.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/contacts/ContactSummary.js","components/contacts/ContactList.js","components/contacts/FavouriteSummary.js","components/contacts/FavouriteList.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/contacts/CreateContact.js","components/contacts/CreateFavouritesContact.js","components/auth/signUp.js","components/dashboard/Welcome.js","components/dashboard/Footer.js","App.js","store/reducers/AuthReducer.js","store/reducers/ContactReducer.js","store/reducers/RootReducer.js","index.js"],"names":["SignedInLinks","handleClick","e","props","createContact","currentUser","handleLogout","signOut","className","onClick","this","to","firstName","lastName","Component","connect","state","auth","dispatch","type","SignedOutLinks","isLogged","links","ContactSummary","handleDelete","key","deleteContact","handleFavourite","favouriteContact","contact","name","number","email","ContactList","contactList","map","FavouriteSummary","deleteFavouritesContact","favouriteRemoveContact","FavouriteList","favouriteList","Dashboard","contacts","length","i","users","favourites","SignIn","password","error","handleChange","setState","target","id","value","handleSubmit","preventDefault","flag","signIn","history","push","onSubmit","htmlFor","required","onChange","user","CreateProject","match","params","k","editContact","CreateFavouritesProject","editFavouritesContact","signUp","SignUp","createUserContact","componentDidMount","Welcome","style","marginTop","Footer","height","width","background","position","bottom","color","left","App","path","component","CreateFavouritesContact","CreateContact","exact","initState","AuthReducer","action","ContactReducer","Math","random","editedContacts","removedContact","RootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfc457fa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { createContact } from '../../store/actions/contactActions'\r\nimport { render } from 'react-dom'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nclass SignedInLinks extends Component {\r\n\r\n    handleClick = (e) => {\r\n        this.props.createContact(this.props.currentUser);\r\n    }\r\n\r\n    handleLogout = (e) => {\r\n        this.props.signOut();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ul className=\"right\">\r\n                <li onClick={this.handleClick} className=\"Contact-Create\">Create Contact</li>\r\n                <li onClick={this.handleLogout}><a>Log Out</a></li>\r\n                <li><NavLink to='/Dashboard' className=\"btn btn-floating blue lighten-1\">{this.props.currentUser.firstName[0]+this.props.currentUser.lastName[0]}</NavLink></li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        currentUser : state.auth.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createContact : (currentUser) => {dispatch(createContact(currentUser))},\r\n        signOut : () => {dispatch(signOut())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignedInLinks)","export const createContact = (currentUser) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Create_Contact',currentUser:currentUser});\r\n    }\r\n}\r\n\r\nexport const editContact = (contact,currentUser) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Edit_Contact',contact:contact,currentUser:currentUser});\r\n    }\r\n}\r\n\r\nexport const editFavouritesContact = (contact,currentUser) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Edit_Favourites_Contact',contact:contact,currentUser:currentUser});\r\n    }\r\n}\r\n\r\nexport const deleteContact = (key,currentUser) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Delete_Contact',key:key,currentUser:currentUser})\r\n    }\r\n}\r\n\r\nexport const deleteFavouritesContact = (key,currentUser) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Delete_Favourites_Contact',key:key,currentUser:currentUser})\r\n    }\r\n}\r\n\r\nexport const favouriteContact = (key,currentUser) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Favourite_Contact',key:key,currentUser:currentUser})\r\n    }\r\n}\r\n\r\nexport const favouriteRemoveContact = (key,currentUser) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Favourite_Remove_Contact',key:key,currentUser:currentUser})\r\n    }\r\n}\r\n\r\nexport const createUserContact = (user) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Create_User_Contact',user:user})\r\n    }\r\n}","export const signOut = () => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Logout'})\r\n    }\r\n}\r\n\r\nexport const SignUp = (user) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Signup',user:user})\r\n    }\r\n}\r\n\r\nexport const signIn = (user) => {\r\n    return(dispatch) => {\r\n        dispatch({type:'Signin',user:user})\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign-Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log-In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = ({isLogged}) => {\r\n    const links = isLogged ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/Dashboard' className=\"left brand-logo\">PhoneBook</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isLogged : state.auth.isLogged\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteContact,favouriteContact } from '../../store/actions/contactActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ContactSummary extends Component{\r\n\r\n    handleDelete = (key) => {\r\n        this.props.deleteContact(key,this.props.currentUser);\r\n    }\r\n\r\n    handleFavourite = (key) => {\r\n        this.props.favouriteContact(key,this.props.currentUser);\r\n    }\r\n\r\n    render(){\r\n        const {contact} = this.props;\r\n        return(\r\n            <div className=\"project-summary\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content grey-text text-darken-3\">\r\n                        <div className=\"card-title\">{contact.name}</div>\r\n                        <p>{contact.number}</p>\r\n                        <p>{contact.email}</p>\r\n                        <Link to={'/create/'+contact.key}>Edit Contact</Link><br/>\r\n                        <button type=\"delete\" className=\"del-button blue btn z-depth-0\" onClick={() => {this.handleDelete(contact.key)}}>Delete Contact</button>\r\n                        <button type=\"delete\" className=\"fav-button grey btn z-depth-0\" onClick={() => {this.handleFavourite(contact.key)}}>Add to Favourites</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        currentUser : state.auth.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        deleteContact : (key,currentUser) => {dispatch(deleteContact(key,currentUser))},\r\n        favouriteContact : (key,currentUser) => {dispatch(favouriteContact(key,currentUser))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactSummary)","import React from 'react'\r\nimport ContactSummary from './ContactSummary'\r\n\r\nconst ContactList = ({contactList}) => {\r\n    return(\r\n        <div className=\"section contact-list\">\r\n            {contactList && contactList.map(contact => {\r\n                return(\r\n                    <ContactSummary contact={contact} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ContactList","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteFavouritesContact,favouriteRemoveContact } from '../../store/actions/contactActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass FavouriteSummary extends Component{\r\n\r\n    handleDelete = (key) => {\r\n        this.props.deleteFavouritesContact(key,this.props.currentUser);\r\n    }\r\n\r\n    handleFavourite = (key) => {\r\n        this.props.favouriteRemoveContact(key,this.props.currentUser);\r\n    }\r\n\r\n    render(){\r\n        const {contact} = this.props;\r\n        return(\r\n            <div className=\"project-summary\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content grey-text text-darken-3\">\r\n                        <div className=\"card-title\">{contact.name}</div>\r\n                        <p>{contact.number}</p>\r\n                        <p>{contact.email}</p>\r\n                        <Link to={'/create/favourites/'+contact.key}>Edit Contact</Link><br/>\r\n                        <button type=\"delete\" className=\"del-button blue btn z-depth-0\" onClick={() => {this.handleDelete(contact.key)}}>Delete Contact</button>\r\n                        <button type=\"delete\" className=\"fav-button grey btn z-depth-0\" onClick={() => {this.handleFavourite(contact.key)}}>Remove from Favourites</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        currentUser : state.auth.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        deleteFavouritesContact : (key,currentUser) => {dispatch(deleteFavouritesContact(key,currentUser))},\r\n        favouriteRemoveContact : (key,currentUser) => {dispatch(favouriteRemoveContact(key,currentUser))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FavouriteSummary)","import React from 'react'\r\nimport FavouriteSummary from './FavouriteSummary'\r\n\r\nconst FavouriteList = ({favouriteList}) => {\r\n    return(\r\n        <div className=\"section contact-list\">\r\n            {favouriteList && favouriteList.map(contact => {\r\n                return(\r\n                    <FavouriteSummary contact={contact} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default FavouriteList","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ContactList from '../contacts/ContactList'\r\nimport FavouriteList from '../contacts/FavouriteList'\r\n\r\nclass Dashboard extends Component{\r\n\r\n    state = {\r\n        contacts : this.props.contactList\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.isLogged)\r\n            return <Redirect to='/signup' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <h4>Contacts</h4>\r\n                        {this.props.contactList.length>0 ? <ContactList contactList={this.props.contactList}/> : \r\n                            <h5>You have no contacts yet !</h5>}\r\n                    </div>\r\n                    <div className=\"col s12 m6\">\r\n                        <h4>Favourites</h4>\r\n                        {this.props.favouriteList.length>0 ? <FavouriteList favouriteList={this.props.favouriteList} /> : \r\n                            <h5>You have no favourites yet !</h5>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let contactList = [],favouriteList=[];\r\n    for(var i=0;i<state.contact.users.length;i++)\r\n    {\r\n        if(state.contact.users[i].email===state.auth.currentUser.email)\r\n        {\r\n            contactList = state.contact.users[i].contacts\r\n            break;\r\n        }\r\n    }\r\n    for(var i=0;i<state.contact.users.length;i++)\r\n    {\r\n        if(state.contact.users[i].email===state.auth.currentUser.email)\r\n        {\r\n            favouriteList = state.contact.users[i].favourites\r\n            break;\r\n        }\r\n    }\r\n    return{\r\n        contactList : contactList,\r\n        favouriteList : favouriteList,\r\n        isLogged : state.auth.isLogged,\r\n        currentUser : state.auth.currentUser,\r\n        users : state.contact.users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signIn} from '../../store/actions/authActions'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email : '',\r\n        password : '',\r\n        error:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n        this.setState({\r\n            error : ''\r\n        })\r\n    }\r\n\r\n    handleSubmit =(e) => {\r\n        e.preventDefault();\r\n        let users = this.props.users;\r\n        let flag=false;\r\n        for(var i=0;i<users.length;i++)\r\n        {\r\n            if(users[i].email===this.state.email && users[i].password===this.state.password)\r\n            {\r\n                flag=true;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===true)\r\n        {\r\n            this.props.signIn(this.state);\r\n            this.props.history.push('/Dashboard');\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                error : 'No such user found'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h5 className=\"center section\">Sign-In</h5>\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" required onChange={this.handleChange} value={this.state.email}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\" >Password</label>\r\n                        <input type=\"password\" id=\"password\" required value={this.state.password} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"pink btn z-depth-0\">Submit</button>\r\n                    </div>\r\n                    {this.state.error.length>0 ? <div className=\"center red-text\">{this.state.error}</div> : null}\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        users : state.auth.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn : (user) => {dispatch(signIn(user))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { editContact } from '../../store/actions/contactActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        name : '',\r\n        number : '',\r\n        error:'',\r\n        email:'',\r\n        key:this.props.match.params.id,\r\n        users : this.props.users\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n        this.setState({\r\n            error:''\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.number.length!==10)\r\n        {\r\n            this.setState({\r\n                error:'Enter valid Mobile Number'\r\n            })\r\n        }\r\n        else\r\n        {\r\n            var flag=false;\r\n            let users = this.state.users;\r\n            for(var i=0;i<users.length;i++)\r\n            {\r\n                if(users[i].email===this.props.currentUser.email)\r\n                {\r\n                    for(var k=0;k<users[i].contacts.length;k++)\r\n                    {\r\n                        if(users[i].contacts[k].name===this.state.name)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Name already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].contacts[k].email===this.state.email)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Email already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].contacts[k].number===this.state.number)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Number already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                    }\r\n\r\n                    for(var k=0;k<users[i].favourites.length;k++)\r\n                    {\r\n                        if(users[i].favourites[k].name===this.state.name)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Name already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].favourites[k].email===this.state.email)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Email already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].favourites[k].number===this.state.number)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Number already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!flag)\r\n            {\r\n                this.props.editContact(this.state,this.props.currentUser);\r\n                this.setState({\r\n                    name : '',\r\n                    number : '',\r\n                    error:'',\r\n                    email:''\r\n                })\r\n                this.props.history.push('/Dashboard');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h5 className=\"center section\">Edit Contact</h5>\r\n                <form className=\"white create-pro\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">Contact name</label>\r\n                        <input type=\"text\" id=\"name\" required onChange={this.handleChange} value={this.state.name}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"number\" >Contact number</label>\r\n                        <input type=\"number\" id=\"number\" required onChange={this.handleChange} value={this.state.number}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Contact email</label>\r\n                        <input type=\"email\" id=\"email\" required onChange={this.handleChange} value={this.state.email}/>\r\n                    </div>\r\n                    {this.state.error.length > 0 ? <p className=\"red-text\">{this.state.error}</p> : null}\r\n                    <div className=\"input-field\">\r\n                        <button type=\"submit\" className=\"pink btn z-depth-0\">Submit</button>\r\n                    </div>\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        currentUser : state.auth.currentUser,\r\n        users : state.contact.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        editContact : (contact,currentUser) => {dispatch(editContact(contact,currentUser))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { editFavouritesContact } from '../../store/actions/contactActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateFavouritesProject extends Component {\r\n    state = {\r\n        name : '',\r\n        number : '',\r\n        error:'',\r\n        email:'',\r\n        key:this.props.match.params.id,\r\n        users : this.props.users\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n        this.setState({\r\n            error:''\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.number.length!==10)\r\n        {\r\n            this.setState({\r\n                error:'Enter valid Mobile Number'\r\n            })\r\n        }\r\n        else\r\n        {\r\n            var flag=false;\r\n            let users = this.state.users;\r\n            for(var i=0;i<users.length;i++)\r\n            {\r\n                if(users[i].email===this.props.currentUser.email)\r\n                {\r\n                    for(var k=0;k<users[i].contacts.length;k++)\r\n                    {\r\n                        if(users[i].contacts[k].name===this.state.name)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Name already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].contacts[k].email===this.state.email)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Email already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].contacts[k].number===this.state.number)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Number already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                    }\r\n\r\n                    for(var k=0;k<users[i].favourites.length;k++)\r\n                    {\r\n                        if(users[i].favourites[k].name===this.state.name)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Name already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].favourites[k].email===this.state.email)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Email already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                        else if(users[i].favourites[k].number===this.state.number)\r\n                        {\r\n                            this.setState({\r\n                                error:'Contact Number already exists'\r\n                            })\r\n                            flag=true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!flag)\r\n            {\r\n                this.props.editFavouritesContact(this.state,this.props.currentUser);\r\n                this.setState({\r\n                    name : '',\r\n                    number : '',\r\n                    error:'',\r\n                    email:''\r\n                })\r\n                this.props.history.push('/');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h5 className=\"center section\">Edit Favourite Contact</h5>\r\n                <form className=\"white create-pro\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">Contact name</label>\r\n                        <input type=\"text\" id=\"name\" required onChange={this.handleChange} value={this.state.name}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"number\" >Contact number</label>\r\n                        <input type=\"number\" id=\"number\" required onChange={this.handleChange} value={this.state.number}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Contact email</label>\r\n                        <input type=\"email\" id=\"email\" required onChange={this.handleChange} value={this.state.email}/>\r\n                    </div>\r\n                    {this.state.error.length > 0 ? <p className=\"red-text\">{this.state.error}</p> : null}\r\n                    <div className=\"input-field\">\r\n                        <button type=\"submit\" className=\"pink btn z-depth-0\">Submit</button>\r\n                    </div>\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        currentUser : state.auth.currentUser,\r\n        users : state.contact.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        editFavouritesContact : (contact,currentUser) => {dispatch(editFavouritesContact(contact,currentUser))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateFavouritesProject)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {SignUp} from '../../store/actions/authActions'\r\nimport {createUserContact} from '../../store/actions/contactActions'\r\n\r\nclass signUp extends Component {\r\n    state = {\r\n        firstName : '',\r\n        lastName : '',\r\n        email : '',\r\n        password : '',\r\n        error : '',\r\n        users:this.props.users,\r\n        isLogged : false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n        this.setState({\r\n            error:''\r\n        })\r\n    }\r\n\r\n    handleSubmit =(e) => {\r\n        e.preventDefault();\r\n        let users = this.state.users;\r\n        var flag = false;\r\n        if(users.length>0)\r\n        {\r\n            for(var i=0;i<users.length;i++)\r\n            {\r\n                if(users[i].email===this.state.email)\r\n                {\r\n                    flag=true;\r\n                    this.setState({\r\n                        error:'User with this email already exists'\r\n                    })\r\n                }\r\n            }\r\n\r\n            if(!flag)\r\n            {\r\n                this.props.SignUp(this.state);\r\n                this.props.createUserContact(this.state);\r\n                this.props.history.push('/Dashboard');\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.props.SignUp(this.state);\r\n            this.props.createUserContact(this.state);\r\n            this.props.history.push('/Dashboard');\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            users : this.props.users,\r\n            isLogged : this.props.isLogged\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLogged)\r\n            return <Redirect to='/Dashboard' />\r\n        return (\r\n            <div className=\"container\">\r\n                <h5 className=\"center section\">Sign-Up</h5>\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" required onChange={this.handleChange} value={this.state.firstName}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" required onChange={this.handleChange} value={this.state.lastName}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" required onChange={this.handleChange} value={this.state.email}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\" >Password</label>\r\n                        <input type=\"password\" id=\"password\" required value={this.state.password} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"pink btn z-depth-0\">Submit</button>\r\n                    </div>\r\n                    {this.state.error.length>0 ?  <div className=\"center red-text\">{this.state.error}</div> : null}\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isLogged : state.auth.isLogged,\r\n        users : state.contact.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        SignUp : (user) => {dispatch(SignUp(user))},\r\n        createUserContact : (user) => {dispatch(createUserContact(user))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(signUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Welcome extends Component {\r\n    render(){\r\n        if(this.props.isLogged)\r\n            return <Redirect to='/Dashboard' />\r\n        return(\r\n            <div>\r\n                <h5 style={{marginTop:'250px'}} className=\"center\">Welcome User !!</h5>\r\n                <h6 className=\"center\">Sign-up / Login to continue</h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isLogged: state.auth.isLogged\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Welcome)","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n    render(){\r\n        return(\r\n            <div style={{height:\"70px\",width:\"100%\",background:\"black\",position:\"fixed\",bottom:\"0\"}}>\r\n                <p style={{color:\"white\",position:\"absolute\",left:\"45%\",bottom:\"10px\"}}><strong>Copyright &copy; Yash 2020</strong></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SignIn from './components/auth/SignIn';\nimport CreateContact from './components/contacts/CreateContact';\nimport CreateFavouritesContact from './components/contacts/CreateFavouritesContact';\nimport { connect } from 'react-redux';\nimport signUp from './components/auth/signUp';\nimport Welcome from './components/dashboard/Welcome';\nimport Footer from './components/dashboard/Footer';\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={signUp} />\n            <Route path='/create/favourites/:id' component={CreateFavouritesContact} />\n            <Route path='/create/:id' component={CreateContact} />\n            <Route path='/Dashboard' component={Dashboard} />\n            <Route exact path='/' component={Welcome} />\n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default (App);\n","const initState = {\r\n    isLogged : false,\r\n    users : [],\r\n    currentUser : {}\r\n}\r\n\r\nconst AuthReducer = (state=initState,action) => {\r\n    if(action.type==='Logout')\r\n    {\r\n        return{\r\n            ...state,\r\n            isLogged : false,\r\n            currentUser : {}\r\n        }\r\n    }\r\n    else if(action.type==='Signup')\r\n    {\r\n        return{\r\n            ...state,\r\n            isLogged : true,\r\n            users : [...state.users,{firstName:action.user.firstName,lastName:action.user.lastName,email:action.user.email,password:action.user.password}],\r\n            currentUser : {firstName:action.user.firstName,lastName:action.user.lastName,email:action.user.email,password:action.user.password}\r\n        }\r\n    }\r\n    else if(action.type==='Signin')\r\n    {\r\n        for(var i=0;i<state.users.length;i++)\r\n        {\r\n            if(action.user.email===state.users[i].email)\r\n            {\r\n                state.currentUser = state.users[i];\r\n            }\r\n        }\r\n        return{\r\n            ...state,\r\n            isLogged : true\r\n        }\r\n    }\r\n    return{\r\n        ...state\r\n    };\r\n}\r\n\r\nexport default AuthReducer","const initState = {\r\n    users : []\r\n}\r\n\r\nconst ContactReducer = (state=initState,action) => {\r\n    if(action.type==='Create_User_Contact')\r\n    {\r\n        return{\r\n            ...state,\r\n            users : [...state.users,{email:action.user.email,contacts:[],favourites:[]}]\r\n        }\r\n    }\r\n    else if(action.type==='Create_Contact')\r\n    {\r\n        var i;\r\n        for(i=0;i<state.users.length;i++)\r\n        {\r\n            if(state.users[i].email===action.currentUser.email)\r\n            {\r\n                state.users[i].contacts = [...state.users[i].contacts,{name:'Name',number:'Number',key:Math.random(),email:'Email'}]\r\n            }\r\n        }\r\n        return{\r\n            ...state\r\n        }\r\n    }\r\n    else if(action.type==='Edit_Contact')\r\n    {\r\n        let editedContacts = [];\r\n        var k;\r\n        // console.log(action.currentUser);\r\n        // console.log(state.users);\r\n        for(k=0;k<state.users.length;k++)\r\n        {\r\n            if(state.users[k].email===action.currentUser.email)\r\n            {\r\n                for(var i=0;i<state.users[k].contacts.length;i++)\r\n                {  \r\n                    if(state.users[k].contacts[i].key!=action.contact.key)\r\n                    {\r\n                        editedContacts = [...editedContacts,state.users[k].contacts[i]]\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        \r\n        state.users[k].contacts = editedContacts;\r\n        state.users[k].contacts = [...state.users[k].contacts,{name:action.contact.name,number:action.contact.number,key:action.contact.key,email:action.contact.email}]\r\n        return{\r\n            ...state,\r\n        }\r\n    }\r\n    else if(action.type==='Edit_Favourites_Contact')\r\n    {\r\n        let editedContacts = [];\r\n        var k=0;\r\n        for(k=0;k<state.users.length;k++)\r\n        {\r\n            if(state.users[k].email===action.currentUser.email)\r\n            {\r\n                for(var i=0;i<state.users[k].favourites.length;i++)\r\n                {  \r\n                    if(state.users[k].favourites[i].key!=action.contact.key)\r\n                    {\r\n                        editedContacts = [...editedContacts,state.users[k].favourites[i]]\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        \r\n        state.users[k].favourites = editedContacts;\r\n        state.users[k].favourites = [...state.users[k].favourites,{name:action.contact.name,number:action.contact.number,key:action.contact.key,email:action.contact.email}]\r\n        return{\r\n            ...state,\r\n        }\r\n    }\r\n    else if(action.type==='Delete_Contact')\r\n    {\r\n        let editedContacts = [];\r\n        var k;\r\n        // console.log(action.currentUser);\r\n        // console.log(state.users);\r\n        for(k=0;k<state.users.length;k++)\r\n        {\r\n            if(state.users[k].email===action.currentUser.email)\r\n            {\r\n                for(var i=0;i<state.users[k].contacts.length;i++)\r\n                {  \r\n                    if(state.users[k].contacts[i].key!=action.key)\r\n                    {\r\n                        editedContacts = [...editedContacts,state.users[k].contacts[i]]\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        \r\n        state.users[k].contacts = editedContacts;\r\n\r\n        return{\r\n            ...state\r\n        }\r\n    }\r\n    else if(action.type==='Delete_Favourites_Contact')\r\n    {\r\n        let editedContacts = [];\r\n        var k=0;\r\n        for(k=0;k<state.users.length;k++)\r\n        {\r\n            if(state.users[k].email===action.currentUser.email)\r\n            {\r\n                for(var i=0;i<state.users[k].favourites.length;i++)\r\n                {  \r\n                    if(state.users[k].favourites[i].key!=action.key)\r\n                    {\r\n                        editedContacts = [...editedContacts,state.users[k].favourites[i]]\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        \r\n        state.users[k].favourites = editedContacts;\r\n        return{\r\n            ...state\r\n        }\r\n    }\r\n    else if(action.type==='Favourite_Contact')\r\n    {\r\n        let editedContacts = [],removedContact={};\r\n        var k;\r\n        for(k=0;k<state.users.length;k++)\r\n        {\r\n            if(state.users[k].email===action.currentUser.email)\r\n            {\r\n                for(var i=0;i<state.users[k].contacts.length;i++)\r\n                {  \r\n                    if(state.users[k].contacts[i].key!=action.key)\r\n                    {\r\n                        editedContacts = [...editedContacts,state.users[k].contacts[i]]\r\n                    }\r\n                    else\r\n                    {\r\n                        removedContact = state.users[k].contacts[i];\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        state.users[k].contacts = editedContacts;\r\n        state.users[k].favourites = [...state.users[k].favourites,{name:removedContact.name,number:removedContact.number,key:removedContact.key,email:removedContact.email}];\r\n        return{\r\n            ...state\r\n        }\r\n    }\r\n    else if(action.type==='Favourite_Remove_Contact')\r\n    {\r\n        let editedContacts = [],removedContact={};\r\n        var k;\r\n        for(k=0;k<state.users.length;k++)\r\n        {\r\n            if(state.users[k].email===action.currentUser.email)\r\n            {\r\n                for(var i=0;i<state.users[k].favourites.length;i++)\r\n                {  \r\n                    if(state.users[k].favourites[i].key!=action.key)\r\n                    {\r\n                        editedContacts = [...editedContacts,state.users[k].favourites[i]]\r\n                    }\r\n                    else\r\n                    {\r\n                        removedContact = state.users[k].favourites[i];\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        state.users[k].favourites = editedContacts;\r\n        state.users[k].contacts = [...state.users[k].contacts,{name:removedContact.name,number:removedContact.number,key:removedContact.key,email:removedContact.email}];\r\n        return{\r\n            ...state\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default ContactReducer","import {combineReducers} from 'redux'\r\nimport AuthReducer from './AuthReducer'\r\nimport ContactReducer from './ContactReducer'\r\n\r\nconst RootReducer = combineReducers({\r\n    auth : AuthReducer,\r\n    contact : ContactReducer\r\n});\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport RootReducer from './store/reducers/RootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(RootReducer,applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}